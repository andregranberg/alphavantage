{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andrey/Documents/React/7/src/PersonList_table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable } from \"react-table\";\nconst data = [{\n  firstName: \"jane\",\n  lastName: \"doe\",\n  age: 20\n}, {\n  firstName: \"john\",\n  lastName: \"smith\",\n  age: 21\n}, {\n  firstName: \"andré\",\n  lastName: \"granberg\",\n  age: 25\n}];\nconst columns = [{\n  Header: \"Name\",\n  columns: [{\n    Header: \"First Name\",\n    accessor: \"firstName\"\n  }, {\n    Header: \"Last Name\",\n    accessor: \"lastName\"\n  }]\n}, {\n  Header: \"Other Info\",\n  columns: [{\n    Header: \"Age\",\n    accessor: \"age\"\n  }]\n}];\n\nconst Table = ({\n  columns,\n  data\n}) => {\n  _s();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"/g9Mkiasbrj5FIEAh46b8HADmlA=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nimport axios from 'axios';\nlet config = {\n  headers: {\n    'x-rapidapi-key': '65c02a4672mshf6ff63121b66145p1777adjsn6a125a20822d',\n    'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com'\n  },\n  params: {\n    function: 'GLOBAL_QUOTE',\n    symbol: 'TSLA'\n  }\n};\nvar obj;\nvar response;\nvar symbol;\nvar open;\nvar elements;\nexport default class PersonList_table extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://alpha-vantage.p.rapidapi.com/query`, config).then(res => {\n      obj = res.data;\n      response = obj[Object.keys(obj)[0]];\n      symbol = JSON.stringify(response[Object.keys(response)[0]]);\n      open = JSON.stringify(response[Object.keys(response)[1]]);\n      elements = {\n        symbol: symbol,\n        open: open\n      };\n      const persons = elements;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: this.state.persons.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: this.state.persons.open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/andrey/Documents/React/7/src/PersonList_table.js"],"names":["React","useTable","data","firstName","lastName","age","columns","Header","accessor","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","axios","config","params","function","symbol","obj","response","open","elements","PersonList_table","Component","state","persons","componentDidMount","get","then","res","Object","keys","JSON","stringify","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useTable } from \"react-table\";\n\n\n\n\nconst data = [\n  { firstName: \"jane\", lastName: \"doe\", age: 20 },\n  { firstName: \"john\", lastName: \"smith\", age: 21 },\n  { firstName: \"andré\", lastName: \"granberg\", age: 25 }\n];\n\nconst columns = [\n  {\n    Header: \"Name\",\n    columns: [\n      {\n        Header: \"First Name\",\n        accessor: \"firstName\"\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"lastName\"\n      }\n    ]\n  },\n  {\n    Header: \"Other Info\",\n    columns: [\n      {\n        Header: \"Age\",\n        accessor: \"age\"\n      }\n    ]\n  }\n];\n\nconst Table = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\n\n\n\n\n\n\n\n\n\nimport axios from 'axios';\n\nlet config = {\n  headers: { \n    'x-rapidapi-key': '65c02a4672mshf6ff63121b66145p1777adjsn6a125a20822d', \n    'x-rapidapi-host': 'alpha-vantage.p.rapidapi.com'},\n  params: {\n    function: 'GLOBAL_QUOTE', symbol: 'TSLA'\n  },\n}\n\nvar obj;\nvar response;\nvar symbol;\nvar open;\nvar elements;\n\nexport default class PersonList_table extends React.Component {\n  state = {\n    persons: []\n  }\n\n  componentDidMount() {\n    axios.get(`https://alpha-vantage.p.rapidapi.com/query`, config)\n      .then(res => {\n        obj = res.data;\n        response = obj[Object.keys(obj)[0]];\n        symbol = JSON.stringify(response[Object.keys(response)[0]]);\n        open = JSON.stringify(response[Object.keys(response)[1]]);\n        elements = {symbol: symbol, open: open}\n        const persons = elements;\n        this.setState({ persons });\n      })\n  }\n\n  render() {\n    return (\n      <ul>\n        <li>{ this.state.persons.symbol}</li>\n        <li>{ this.state.persons.open}</li>\n\n      <Table columns={columns} data={data} />\n      </ul>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}